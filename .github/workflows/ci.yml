name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # 测试作业 - 仅测试支持的Python版本
  test:
    # 使用最新的Ubuntu运行器以减少等待时间
    runs-on: ubuntu-latest
    # 只指定明确支持的Python版本
    strategy:
      matrix:
        # 项目仅支持Python 3.9、3.10和3.11版本
        python-version: [
          '3.9',
          '3.10',
          '3.11'
        ]
      # 配置为不快速失败，确保所有Python版本都能运行测试
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      id: setup-python
      uses: actions/setup-python@v4
      with:
        # 严格使用矩阵中指定的Python版本
        python-version: "${{ matrix.python-version }}"
        # 启用pip缓存以加快依赖安装
        cache: 'pip'
        # 关闭最新版本检查，避免版本解析问题
        check-latest: false
        # 明确指定x64架构
        architecture: 'x64'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Lint with flake8
      run: |
        # 停止构建，除非flake8检查通过
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # 警告但不停止构建
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Test with pytest (optional)
      run: |
        python -m pytest --cov=src tests/ --cov-report=xml || echo "Tests skipped or failed, continuing workflow"
      continue-on-error: true

    - name: Upload coverage to Codecov (optional)
      uses: codecov/codecov-action@v3
      continue-on-error: true
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false